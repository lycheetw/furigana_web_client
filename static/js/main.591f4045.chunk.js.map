{"version":3,"sources":["API.js","Utils.js","OkuuriganaUtils.js","App.js","serviceWorker.js","index.js"],"names":["host","fetchRequest","url","params","timeout","isTimeout","Promise","resolve","reject","TO","setTimeout","Error","fetch","then","res","clearTimeout","catch","e","API","err","console","error","str","method","headers","body","JSON","stringify","text","json","response","title","content","payload","Utils","isKanji","c","num","charCodeAt","isHiragana","isAlpha","isNumber","isPureAlpha","s","i","length","isPureHiragana","isPureKanji","hasKanji","OkuriganaUtils","surface","kana","this","align","ret","t","push","join","divideSurface","len","Array","idx","lastIndexOf","substr","slice","indexOf","_kana","theme","createMuiTheme","palette","primary","main","cyan","App","handleChange","event","setState","source","target","value","query","a","ary","state","split","paragraph","map","it","dictionary","OkuuriganaUtils","format","select","j","undefined","wordInfo","dialogOpen","paragraphIdx","wordIdx","cls","className","style","display","fontSize","onClick","okuriganToFurigana","okurigana","furigana","isFuriganaPart","wakeUpServer","previewPageClassName","queryString","parse","window","location","search","Container","fixed","flexDirection","ThemeProvider","noValidate","autoComplete","marginTop","TextField","fullWidth","label","multiline","rows","variant","onChange","justifyContent","Button","color","key","FullScreenDialog","onClose","addBookmark","onSave","React","Component","Transition","forwardRef","props","ref","Slide","direction","validateOkurigana","count","useState","setOkurigana","setDictionary","bookmarkIcon","BookmarkBorder","Bookmark","Dialog","fullScreen","open","onExited","TransitionComponent","AppBar","position","Toolbar","IconButton","edge","aria-label","Close","Typography","flex","FindInPage","List","component","ListItem","disabled","defaultValue","helperText","InputProps","endAdornment","ReportButton","visibility","report","reportButtonTheme","secondary","orange","InputAdornment","startIcon","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.591f4045.chunk.js","sourcesContent":["\nconst host = \"https://furigana-lychee.herokuapp.com/\";\n// const host = \"http://localhost:8080/\"\n\nconst fetchRequest = (url, params={}, timeout=10000) => {\n    let isTimeout = false;\n    return new Promise(function(resolve, reject) {\n        const TO = setTimeout(function() {\n            isTimeout = true;\n            reject(new Error('Fetch timeout'));\n        }, timeout);\n\n        fetch(url, params)\n            .then(res => {\n                clearTimeout(TO)\n                if(!isTimeout) {\n                    resolve(res)\n                }\n            }).catch(e => {\n                if( isTimeout ){\n                    return\n                }\n                reject(e)\n            })\n    })\n}\n\nclass API {\n    \n    static async wakeUpServer() {\n        fetchRequest(host, null, 5 * 1000)\n            .then(res => {})\n            .catch(err => console.error(err))\n    }\n\n    static async query(str) {\n        const response = await fetch(host, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({text: str}),\n        }).then(res => res.json());\n        \n        return response;\n    }\n\n    static async report(title, content, payload) {\n        const response = await fetch(`${host}/report`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                text: `${title}: \\`${content}\\`\\n\\`\\`\\`${payload}\\`\\`\\``\n            }),\n        }).then(res => res.text());\n        return response;\n    }\n}\n\nexport default API","class Utils {\n    static isKanji = (c) => {\n        let num = c.charCodeAt(0)\n        return (num >= 0x4E00 && num <= 0x9FFF) || c === '々'　|| c === 'ヶ'　|| c === 'ヵ'\n    }\n    static isHiragana = (c) => {\n        let num = c.charCodeAt(0)\n        return num >= 12353 && num <= 12438\n    }\n    static isAlpha = (c) => {\n        let num = c.charCodeAt(0)\n        return num >= 65 && num <= 122\n    }\n    static isNumber = (c) => {\n        let num = c.charCodeAt(0)\n        return num >= 48 && num <= 57\n    }\n    static isPureAlpha = (s) => {\n        for(let i = 0; i < s.length; i++){\n            if(!Utils.isAlpha(s[i])){\n                return false\n            }\n        }\n        return true;\n    }\n\n    static isPureHiragana = (s) => {\n        for(let i = 0; i < s.length; i++){\n            if(!Utils.isHiragana(s[i])){\n                return false\n            }\n        }\n        return true;\n    }\n    \n    static isPureKanji = (s) => {\n        for(let i = 0; i < s.length; i++){\n            if(!Utils.isKanji(s[i])){\n                return false\n            }\n        }\n        return true;\n    }\n\n    static hasKanji = (s) => {\n        for(let i = 0; i < s.length; i++){\n            if(Utils.isKanji(s[i])){\n                return true\n            }\n        }\n        return false;\n    }\n}\n\nexport default Utils","import Utils from './Utils';\nclass OkuriganaUtils {\n    static format(surface, kana) {\n        if(surface === kana || kana.length === 0) {\n            return surface;\n        }\n        if(Utils.isPureAlpha(surface)) {\n            return surface;\n        }\n        return this.align(surface, kana)\n    }\n\n    static divideSurface(surface) {\n        let ret = [];\n        let t = [surface[0]];\n        \n        for(let i = 1; i < surface.length; i++) {\n            if(!Utils.isHiragana(surface[i]) === !Utils.isHiragana(surface[i - 1])) {\n                t.push(surface[i]);\n            } else {\n                ret.push(t.join(''));\n                t = [surface[i]];\n            }\n        }\n        ret.push(t.join(''));\n\n        return ret;\n    }\n    \n    static align(surface, kana) {\n        let s = this.divideSurface(surface);\n        let ary = Array(s.length);\n        let len = ary.length;\n        if(len === 1) {\n            return `${surface}(${kana})`;\n        } else if(len === 2) {\n            if(Utils.isKanji(s[0][0])) {\n                let idx = kana.lastIndexOf(s[1]);\n                return `${s[0]}(${kana.substr(0,idx)})${s[1]}`;\n            } else {\n                let idx = s[0].length;\n                return `${s[0]}${s[1]}(${kana.substr(idx)})`;\n            }\n        } else if(len === 3) {\n            if(Utils.isKanji(s[0][0])) {\n                let idx = kana.slice(1, -1).indexOf(s[1]) + 1;\n                return `${s[0]}(${kana.substr(0,idx)})${s[1]}${s[2]}(${kana.substr(idx + s[1].length)})`;\n            } else {\n                let _kana = kana.slice(s[0].length).slice(0, -s[2].length);\n                return `${s[0]}${s[1]}(${_kana}${s[2]})`;\n            }\n        } else if(len === 4 && Utils.isKanji(s[0][0])) {\n            let _kana = kana.slice(0, -s[3].length);\n            let ret = this.align(s.slice(0, 3).join(''), _kana);\n            ret += s[3];\n            return ret;\n        }\n    }\n}\n\nexport default OkuriganaUtils","import React from 'react';\nimport { TextField, Button, Container, Dialog, AppBar, Toolbar, IconButton, Typography, List, ListItem, Slide, ThemeProvider, InputAdornment } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport {cyan, orange} from '@material-ui/core/colors';\nimport {Close as CloseIcon, FindInPage as FindInPageIcon, Bookmark as BookmarkIcon, BookmarkBorder as BookmarkBorderIcon, InfoRounded as InfoIcon} from '@material-ui/icons';\nimport './App.css';\nimport API from './API';\nimport Utils from './Utils';\nimport OkuuriganaUtils from './OkuuriganaUtils'\nimport queryString from 'query-string'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: cyan[700],\n    },\n  },\n});\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      source: \"本を読むとき、なにげなくページに挟んでいる「しおり」。とある老舗出版社の、読書フェア向けに制作されたものが、SNS上で「素敵」と人気を集めています。世代や立場を超え、少しでも多くの人々に、本を読むことの楽しさを伝えたい。そんな気持ちから、あえて「読書が苦手な人」が使えるデザインを採用したという、2人の担当者に思いを聞きました。（withnews編集部・神戸郁人）\",\n      paragraph: [],\n      wordInfo: null,\n      dialogOpen: false\n    }\n    API.wakeUpServer()\n  }\n\n  handleChange = (event) => {\n    this.setState({source: event.target.value});\n  }\n\n  query = async() => {\n    let ary = this.state.source.split('\\n');\n    let paragraph = [];\n    for(let i = 0; i < ary.length; i++) {\n      if(ary[i].length === 0) {\n        paragraph.push([]);\n      } else {\n        let res = await API.query(ary[i]);\n        res = res.map(it => {\n          let kana = it['出現形'][1];\n          let dictionary = it['語彙素'];\n          if(it['品詞'][1] === \"固有名詞\" && Utils.hasKanji(it['基本形'][0])) {\n            dictionary = it['基本形'][0];\n          }\n          if(it['語彙素'].indexOf('-') > 0) {\n            let loanword = it['語彙素'].split('-')[1];\n            kana = loanword;\n            dictionary = it['語彙素'].split('-')[0];\n          }\n          it['okurigana'] = OkuuriganaUtils.format(it['surface'], kana);\n          it['dictionary'] = dictionary;\n          return it;\n        })\n        paragraph.push(res);\n      }\n    }\n    // console.log(paragraph)\n    this.setState({paragraph: paragraph});\n  }\n\n  select = async(i, j) => {\n    if(i === undefined || j === undefined ) return;\n    let wordInfo = this.state.paragraph[i][j];\n    // console.log(wordInfo);\n    this.setState({\n      wordInfo: wordInfo,\n      dialogOpen: true\n    });\n    \n    \n  }\n\n  format = (wordInfo, paragraphIdx, wordIdx) => {\n    let clickable = true;\n    let cls = clickable ? 'clickable' : '';\n    if(wordInfo['bookmark']) {\n      cls += ' bookmark'\n    }\n\n    return <div className={cls} style={{display: 'inline-block', fontSize: '14pt'}} onClick={e => {\n      if(clickable) this.select(paragraphIdx, wordIdx);\n    }}>\n      {this.okuriganToFurigana(wordInfo['okurigana'])}\n    </div>\n  }\n\n  okuriganToFurigana = (okurigana) => {\n    if(!okurigana){\n      return [];\n    }\n    let str = \"\";\n    let furigana = \"\";\n    let isFuriganaPart = false;\n    let ary = [];\n    for(let i = 0; i < okurigana.length; i++) {\n      let c = okurigana[i];\n      if(c === '(') {\n        isFuriganaPart = true;\n      } else if(c === ')') {\n        ary.push([str, furigana]);\n        furigana = \"\";\n        str = \"\";\n        isFuriganaPart = false;\n      } else {\n        if(isFuriganaPart) {\n          furigana += c;\n        } else {\n          if(str.length > 0 && !Utils.isHiragana(c) && Utils.isHiragana(str.substr(-1))) {\n            ary.push([str, furigana]);\n            furigana = \"\";\n            str = c;\n          } else {\n            str += c;\n          }\n        }\n      }\n    }\n    ary.push([str, furigana]);\n    return ary.map(it => {\n      let str = it[0];\n      let furigana = it[1];\n      return(\n        <div style={{display: 'inline-block'}}>\n          <div className=\"furigana\">{furigana}</div>\n          <div className=\"surface\">{str}</div>\n        </div>\n      )\n    });\n  }\n\n  render() {\n    let ary = [];\n    for(let i = 0; i < this.state.paragraph.length; i++) {\n      let t = this.state.paragraph[i].map((e, j) => this.format(e, i, j));\n      ary.push(t);\n    }\n    const queryParameter = queryString.parse(window.location.search);\n    let previewPageClassName = \"\";\n    if(queryParameter['preview']) {\n      previewPageClassName = \"a4\"\n    }\n    \n    return (\n      <Container fixed style={{display: \"flex\", flexDirection: 'column'}}>\n        <ThemeProvider theme={theme}>\n          <form noValidate autoComplete=\"off\" style={{marginTop: 24}}>\n            <TextField\n              fullWidth={true}\n              label=\"文章入力\"\n              multiline={true}\n              rows={6}\n              variant=\"outlined\"\n              value={this.state.source} onChange={this.handleChange}\n            />\n            <div style={{display:'flex', justifyContent:'flex-end'}}>\n              <Button color=\"primary\" onClick={e => this.query()}>振り仮名</Button>\n            </div>\n          </form>\n          <div className={['content', previewPageClassName].join(' ')}>\n            <div>{ary.map((e, idx) => <div key={idx} className=\"paragraph\">{e}</div>)}</div>\n          </div>\n          <FullScreenDialog\n            wordInfo={this.state.wordInfo}\n            dialogOpen={this.state.dialogOpen}\n            onClose={() => this.setState({dialogOpen: false})}\n            addBookmark={(value) => {\n              const wordInfo = this.state.wordInfo;\n              wordInfo['bookmark'] = value;\n              this.setState({wordInfo: wordInfo});\n            }}\n            onSave={(okurigana, dictionary) => {\n              const wordInfo = this.state.wordInfo;\n              wordInfo['okurigana'] = okurigana;\n              wordInfo['dictionary'] = dictionary;\n              this.setState({\n                wordInfo: wordInfo,\n                paragraph: this.state.paragraph,\n                dialogOpen: false\n              })\n            }}\n          />\n        </ThemeProvider>\n      </Container>\n    )\n  }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst validateOkurigana = (okurigana) => {\n  let count = 0\n  for(let i = 0; i < okurigana.length; i++) {\n    if(okurigana[i] === '('){\n      count++;\n      if(count !== 1) {\n        break;\n      }\n    } else if(okurigana[i] === ')') {\n      count--;\n    }\n  }\n  return count === 0;\n}\n\nfunction FullScreenDialog(props) {\n  \n  let wordInfo = props.wordInfo;\n  // console.log(wordInfo);\n  const [okurigana, setOkurigana] = React.useState(\"\");\n  const [dictionary, setDictionary] = React.useState(\"\");\n  \n  if(wordInfo == null) {\n    return <div></div>\n  }\n\n  let bookmarkIcon = (<BookmarkBorderIcon/>)\n  \n  if(wordInfo['bookmark']) {\n    bookmarkIcon = <BookmarkIcon/>\n  }\n\n  return (\n    <Dialog\n        fullScreen={true}\n        open={props.dialogOpen}\n        onExited={e => {\n          setOkurigana(\"\");\n          setDictionary(\"\");\n        }}\n        TransitionComponent={Transition}\n      >\n      <AppBar position=\"relative\">\n        <Toolbar>\n          < IconButton edge=\"start\" color=\"inherit\" onClick={() => props.onClose()}\n            aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{flex:1}}>\n            {wordInfo['surface']}\n          </Typography>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => props.addBookmark(!wordInfo['bookmark'])} aria-label=\"close\">\n            {bookmarkIcon}\n          </IconButton>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => window.open(`https://www.weblio.jp/content/${dictionary ? dictionary : wordInfo['dictionary']}`)} aria-label=\"close\">\n            <FindInPageIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container fixed>\n        <List component=\"nav\">\n          <ListItem> \n            <TextField\n              fullWidth={true}\n              label=\"活用\"\n              disabled\n              defaultValue={`${wordInfo['品詞'][0]}, ${wordInfo['活用型'][0]}`}\n            />\n          </ListItem>\n          <ListItem> \n            <TextField\n              error={!validateOkurigana(okurigana)}\n              helperText={validateOkurigana(okurigana) ? \" \" : \"格式錯誤\"}\n              fullWidth={true}\n              label=\"送り仮名\"\n              defaultValue={wordInfo['okurigana']}\n              onChange={(e) => setOkurigana(e.target.value)}\n              InputProps={{\n                endAdornment: \n                  <ReportButton\n                    visibility={false && okurigana.length !== 0 && okurigana !== wordInfo['okurigana']}\n                    onClick={() => {}}\n                  />\n              }}\n            />\n          </ListItem>\n          <ListItem> \n            <TextField\n              fullWidth={true}\n              label=\"辞書\"\n              defaultValue={wordInfo['dictionary']}\n              onChange={(e) => setDictionary(e.target.value)}\n              InputProps={{\n                endAdornment: \n                  <ReportButton\n                    visibility={false && dictionary.length !== 0 && dictionary !== wordInfo['dictionary']}\n                    onClick={() => {}}\n                  />\n              }}\n            />\n          </ListItem>\n          <ListItem style={{display:'flex', justifyContent:'flex-end'}}>\n            <Button color=\"primary\" onClick={() => {\n              if(okurigana.length !== 0 && okurigana !== wordInfo['okurigana']){\n                API.report(\"送り仮名修正\", okurigana, JSON.stringify(wordInfo))\n              }\n              if(dictionary.length !== 0 && dictionary !== wordInfo['dictionary']){\n                API.report(\"字典修正\", dictionary, JSON.stringify(wordInfo))\n              }\n              \n              props.onSave(\n                okurigana ? okurigana : wordInfo['okurigana'], \n                dictionary ? dictionary : wordInfo['dictionary']\n              )\n            }}>更新</Button>\n          </ListItem>\n        </List>\n      </Container>\n    </Dialog>\n  );\n}\n\nconst reportButtonTheme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: orange[500],\n    },\n  },\n});\n\nfunction ReportButton(props) {\n  return <ThemeProvider theme={reportButtonTheme}>\n    <InputAdornment position=\"end\">\n      {props.visibility ? <Button onClick={props.onClick} color=\"secondary\" startIcon={<InfoIcon />}>回報錯誤</Button> : <div/>}\n    </InputAdornment>\n  </ThemeProvider>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}