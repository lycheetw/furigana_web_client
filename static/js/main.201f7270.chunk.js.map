{"version":3,"sources":["API.js","Utils.js","App.js","serviceWorker.js","index.js"],"names":["host","fetchRequest","url","params","timeout","isTimeout","Promise","resolve","reject","TO","setTimeout","Error","fetch","then","res","clearTimeout","catch","e","API","str","method","headers","body","JSON","stringify","text","json","response","title","content","payload","Utils","isKanji","c","num","charCodeAt","isHiragana","isAlpha","isNumber","isPureAlpha","s","i","length","isPureHiragana","isPureKanji","hasKanji","theme","createMuiTheme","palette","primary","main","cyan","App","init","a","checkServerAlive","setState","loading","handleChange","event","source","target","value","query","ary","state","split","paragraph","push","map","it","dictionary","indexOf","loanword","select","j","undefined","selectedPointer","wordInfo","dialogOpen","window","history","pushState","noBackExitsApp","format","paragraphIdx","wordIdx","cls","key","className","style","display","onClick","okuriganToFurigana","okurigana","furigana","isFuriganaPart","substr","idx","mainFontStze","placeholder","self","this","addEventListener","back","paragraphs","t","isPrintMode","queryString","parse","location","search","Container","fixed","flexDirection","ThemeProvider","noValidate","autoComplete","marginTop","TextField","fullWidth","label","multiline","rows","variant","onChange","InputProps","startAdornment","InputAdornment","position","justifyContent","Button","color","disabled","CircularProgress","size","top","left","marginLeft","PrintContainer","FullScreenDialog","onClose","addBookmark","onSave","rangeStart","Math","max","rangeEnd","min","report","slice","React","Component","props","useState","fontSize","setFontSize","warning","setWarning","oprnSnack","margin","chrome","fontFamily","flex","Print","print","join","children","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","elevation","Transition","forwardRef","ref","Slide","direction","validateOkurigana","count","setOkurigana","setDictionary","bookmarkIcon","BookmarkBorder","Bookmark","Dialog","fullScreen","onExited","TransitionComponent","AppBar","Toolbar","IconButton","edge","aria-label","Close","Typography","FindInPage","List","component","ListItem","defaultValue","error","helperText","endAdornment","ReportButton","visibility","reportButtonTheme","secondary","orange","startIcon","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.201f7270.chunk.js","sourcesContent":["\nconst host = \"https://furigana-lychee.herokuapp.com/\";\n// const host = \"http://localhost:8080/\"\n\nconst fetchRequest = (url, params={}, timeout=10000) => {\n    let isTimeout = false;\n    return new Promise(function(resolve, reject) {\n        const TO = setTimeout(function() {\n            isTimeout = true;\n            reject(new Error('Fetch timeout'));\n        }, timeout);\n\n        fetch(url, params)\n            .then(res => {\n                clearTimeout(TO)\n                if(!isTimeout) {\n                    resolve(res)\n                }\n            }).catch(e => {\n                if( isTimeout ){\n                    return\n                }\n                reject(e)\n            })\n    })\n}\n\nclass API {\n    \n    static async checkServerAlive() {\n        try {\n            await fetchRequest(host, null, 1000);\n            return true\n        } catch(e) {\n            return false\n        }\n    }\n\n    static async query(str) {\n        try {\n            const response = await fetch(host, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({text: str}),\n            }).then(res => res.json());\n            return response;\n        } catch(e) {\n            return []\n        }\n    }\n\n    static async report(title, content, payload) {\n        const response = await fetch(`${host}/report`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                text: `${title}: \\`${content}\\`\\n\\`\\`\\`${payload}\\`\\`\\``\n            }),\n        }).then(res => res.text());\n        return response;\n    }\n}\n\nexport default API","class Utils {\n    static isKanji = (c) => {\n        let num = c.charCodeAt(0)\n        return (num >= 0x4E00 && num <= 0x9FFF) || c === '々'　|| c === 'ヶ'　|| c === 'ヵ'\n    }\n    static isHiragana = (c) => {\n        let num = c.charCodeAt(0)\n        return num >= 12353 && num <= 12438\n    }\n    static isAlpha = (c) => {\n        let num = c.charCodeAt(0)\n        return num >= 65 && num <= 122\n    }\n    static isNumber = (c) => {\n        let num = c.charCodeAt(0)\n        return num >= 48 && num <= 57\n    }\n    static isPureAlpha = (s) => {\n        for(let i = 0; i < s.length; i++){\n            if(!Utils.isAlpha(s[i])){\n                return false\n            }\n        }\n        return true;\n    }\n\n    static isPureHiragana = (s) => {\n        for(let i = 0; i < s.length; i++){\n            if(!Utils.isHiragana(s[i])){\n                return false\n            }\n        }\n        return true;\n    }\n    \n    static isPureKanji = (s) => {\n        for(let i = 0; i < s.length; i++){\n            if(!Utils.isKanji(s[i])){\n                return false\n            }\n        }\n        return true;\n    }\n\n    static hasKanji = (s) => {\n        for(let i = 0; i < s.length; i++){\n            if(Utils.isKanji(s[i])){\n                return true\n            }\n        }\n        return false;\n    }\n}\n\nexport default Utils","import React from 'react';\nimport { TextField, Button, Container, Dialog, AppBar, Toolbar, IconButton, Typography, List, ListItem, Slide, ThemeProvider, InputAdornment, CircularProgress, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport {cyan, orange} from '@material-ui/core/colors';\nimport {Close as CloseIcon, FindInPage as FindInPageIcon, Bookmark as BookmarkIcon, BookmarkBorder as BookmarkBorderIcon, InfoRounded as InfoIcon, AddCircleOutline as AddIcon, RemoveCircleOutline as RemoveIcon, Print as PrintIcon} from '@material-ui/icons';\nimport './App.css';\nimport API from './API';\nimport Utils from './Utils';\nimport queryString from 'query-string'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: cyan[700],\n    },\n  },\n});\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      source: \"\",\n      paragraph: [],\n      wordInfo: null,\n      dialogOpen: false,\n      loading: true,\n      mainFontStze: '12pt'\n    }\n    this.placeholder = \"ここで文章を入力して右下のボタンをクリックしてください。\";\n    this.selectedPointer = [0, 0];\n    \n  }\n\n  init = async() => {\n    let ans = await API.checkServerAlive();\n    if(ans) {\n      this.setState({loading: false});\n    } else {\n      this.setState({loading: true});\n      setTimeout(() => {\n        this.init();\n      }, 3000);\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({source: event.target.value});\n  }\n\n  query = async() => {\n    this.setState({loading: true});\n    let ary = this.state.source.split('\\n');\n    \n    let paragraph = [];\n    for(let i = 0; i < ary.length; i++) {\n      if(ary[i].length === 0) {\n        paragraph.push([]);\n      } else {\n        let res = await API.query(ary[i]);\n        res = res.map(it => {\n          let dictionary = it['語彙素'];\n          if(it['品詞'][1] === \"固有名詞\" && Utils.hasKanji(it['基本形'][0])) {\n            dictionary = it['基本形'][0];\n          }\n          if(it['語彙素'].indexOf('-') > 0) {\n            let loanword = it['語彙素'].split('-')[1];\n            it['okurigana'] = `${it['surface']}(${loanword})`;\n            dictionary = it['語彙素'].split('-')[0];\n          }\n          \n          it['dictionary'] = dictionary;\n          return it;\n        })\n        paragraph.push(res);\n      }\n    }\n    // console.log(paragraph)\n    this.setState({\n      loading: false,\n      paragraph: paragraph\n    });\n  }\n\n  componentDidMount() {\n    const self = this;\n    window.addEventListener('popstate', function(event) {\n      // console.log(self.state);\n      if(self.state.dialogOpen) {\n        self.setState({dialogOpen: false});\n      } else {\n        window.history.back();\n      }\n    });\n    this.init();\n  }\n\n  select = async(i, j) => {\n    if(i === undefined || j === undefined ) return;\n    this.selectedPointer = [i, j];\n    let wordInfo = this.state.paragraph[i][j];\n    // console.log(wordInfo);\n    this.setState({\n      wordInfo: wordInfo,\n      dialogOpen: true\n    });\n    window.history.pushState({ noBackExitsApp: true }, '')\n  }\n\n  format = (wordInfo, paragraphIdx, wordIdx) => {\n    let clickable = true;\n    let cls = clickable ? 'clickable' : '';\n    if(wordInfo['bookmark']) {\n      cls += ' bookmark'\n    }\n\n    return <div key={wordIdx} className={cls} style={{display: 'inline-block'}} onClick={e => {\n      if(clickable) this.select(paragraphIdx, wordIdx);\n    }}>\n      {this.okuriganToFurigana(wordInfo['okurigana'])}\n    </div>\n  }\n\n  okuriganToFurigana = (okurigana) => {\n    if(!okurigana){\n      return [];\n    }\n    let str = \"\";\n    let furigana = \"\";\n    let isFuriganaPart = false;\n    let ary = [];\n    for(let i = 0; i < okurigana.length; i++) {\n      let c = okurigana[i];\n      if(c === '(') {\n        isFuriganaPart = true;\n      } else if(c === ')') {\n        ary.push([str, furigana]);\n        furigana = \"\";\n        str = \"\";\n        isFuriganaPart = false;\n      } else {\n        if(isFuriganaPart) {\n          furigana += c;\n        } else {\n          if(str.length > 0 && !Utils.isHiragana(c) && Utils.isHiragana(str.substr(-1))) {\n            ary.push([str, furigana]);\n            furigana = \"\";\n            str = c;\n          } else {\n            str += c;\n          }\n        }\n      }\n    }\n    ary.push([str, furigana]);\n    return ary.map((it, idx) => {\n      let str = it[0];\n      let furigana = it[1];\n      return(\n        <div key={idx} style={{display: 'inline-block'}}>\n          <div className=\"furigana\">{furigana}</div>\n          <div className=\"surface\">{str}</div>\n        </div>\n      )\n    });\n  }\n\n  render() {\n    let paragraphs = [];\n    for(let i = 0; i < this.state.paragraph.length; i++) {\n      let t = this.state.paragraph[i].map((e, j) => this.format(e, i, j));\n      paragraphs.push(t);\n    }\n    const queryParameter = queryString.parse(window.location.search);\n    let isPrintMode = false;\n    if(queryParameter['preview']) {\n      isPrintMode = true\n    }\n    \n    return (\n    <div>\n      <Container fixed style={{display: \"flex\", flexDirection: 'column'}}>\n        <ThemeProvider theme={theme}>\n          <form noValidate autoComplete=\"off\" style={{marginTop: 24}}>\n            <TextField\n              placeholder={this.placeholder}\n              fullWidth={true}\n              label=\"文章入力\"\n              multiline={true}\n              rows={6}\n              variant=\"outlined\"\n              value={this.state.source} onChange={this.handleChange}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\"></InputAdornment>\n              }}\n            />\n            <div style={{display:'flex', justifyContent:'flex-end'}}>\n              <div style={{position: 'relative'}}>\n                <Button \n                  color=\"primary\" \n                  disabled={this.state.loading}\n                  onClick={e => this.query()}>\n                    振り仮名\n                </Button>\n                {this.state.loading && <CircularProgress size={24} style={{position: 'absolute', top: '50%', left: '50%', marginTop: -12, marginLeft:-12, color: cyan[700]}}/>}\n              </div>\n            </div>\n          </form>\n        </ThemeProvider>\n      </Container>\n\n      <PrintContainer fixed style={{display: \"flex\"}} isPrintMode={isPrintMode}>\n        <div>{paragraphs.map((e,idx) => <div key={idx} className=\"paragraph\">{e}</div>)}</div>\n      </PrintContainer>\n\n      <ThemeProvider theme={theme}>\n        <FullScreenDialog\n          wordInfo={this.state.wordInfo}\n          dialogOpen={this.state.dialogOpen}\n          onClose={() => this.setState({dialogOpen: false})}\n          addBookmark={(value) => {\n            const wordInfo = this.state.wordInfo;\n            wordInfo['bookmark'] = value;\n            this.setState({wordInfo: wordInfo});\n          }}\n          onSave={(okurigana, dictionary) => {\n            const wordInfo = this.state.wordInfo;\n            \n            if(okurigana.length !== 0 && okurigana !== wordInfo['okurigana']){\n              let paragraphIdx = this.selectedPointer[0];\n              let wordIdx = this.selectedPointer[1];\n              let rangeStart = Math.max(wordIdx - 1, 0);\n              let rangeEnd = Math.min(wordIdx + 2, this.state.paragraph[paragraphIdx].length);\n              API.report(\"送り仮名修正\", okurigana, JSON.stringify(\n                this.state.paragraph[paragraphIdx].slice(rangeStart, rangeEnd))\n              )\n            }\n            if(dictionary.length !== 0 && dictionary !== wordInfo['dictionary']){\n              let paragraphIdx = this.selectedPointer[0];\n              let wordIdx = this.selectedPointer[1];\n              let rangeStart = Math.max(wordIdx - 1, 0);\n              let rangeEnd = Math.min(wordIdx + 2, this.state.paragraph[paragraphIdx].length);\n              API.report(\"字典修正\", dictionary, JSON.stringify(\n                this.state.paragraph[paragraphIdx].slice(rangeStart, rangeEnd))\n              )\n            }\n\n            wordInfo['okurigana'] = okurigana;\n            wordInfo['dictionary'] = dictionary;\n            this.setState({\n              wordInfo: wordInfo,\n              paragraph: this.state.paragraph,\n              dialogOpen: false\n            })\n          }}\n        />\n      </ThemeProvider>\n    </div>\n    )\n  }\n}\n\nfunction PrintContainer(props) {\n  const [fontSize, setFontSize] = React.useState(16);\n  const [warning, setWarning] = React.useState(\"\");\n  const oprnSnack = warning.length !== 0;\n  if(props.isPrintMode) {\n    return (\n      <div style={props.style}>\n        <ThemeProvider theme={theme}>\n          <div style={{display:'flex', margin: '16px auto'}}>\n            <div>\n              <div className=\"pageContentSetting\">\n                字體大小：\n                <RemoveIcon onClick={e => {\n                  if(fontSize === 16 && window.chrome) {\n                    setWarning(\"Chrome 有最小字體限制，如在意列印品質，請改用Firefox或是Safari瀏覽器。\");\n                    setTimeout(() => setWarning(\"\"), 5000);\n                  }\n                  setFontSize(fontSize - 1);\n                }}/>\n                  <div style={{fontFamily:'monospace', fontSize: '12pt'}}>{fontSize}pt</div>\n                <AddIcon onClick={e => setFontSize(fontSize + 1)}/>\n                <div style={{flex: '1 1 0'}}/>\n                <PrintIcon onClick={e => window.print()}/>\n              </div>\n              <div className={['content', props.isPrintMode ? 'a4' : ''].join(' ')}>\n                <div style={{fontSize: fontSize}}>\n                  {props.children}\n                </div>\n              </div>\n            </div>\n          </div>\n          <Snackbar \n            open={oprnSnack}\n            autoHideDuration={5 * 1000}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center'}}\n            >\n            <MuiAlert \n              severity=\"warning\"\n              elevation={6} \n              variant=\"filled\"\n              onClose={e => setWarning(\"\")}>\n              {warning}\n            </MuiAlert>\n               \n          </Snackbar>\n        </ThemeProvider>\n      </div>\n    )\n  }\n  else {\n    return (\n      <Container fixed style={props.style}>\n        <ThemeProvider theme={theme}>\n          <div className={['content']}>\n            {props.children}\n          </div>\n        </ThemeProvider>\n      </Container>\n    )\n  }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst validateOkurigana = (okurigana) => {\n  let count = 0\n  for(let i = 0; i < okurigana.length; i++) {\n    if(okurigana[i] === '('){\n      count++;\n      if(count !== 1) {\n        break;\n      }\n    } else if(okurigana[i] === ')') {\n      count--;\n    }\n  }\n  return count === 0;\n}\n\nfunction FullScreenDialog(props) {\n  \n  let wordInfo = props.wordInfo;\n  // console.log(wordInfo);\n  const [okurigana, setOkurigana] = React.useState(\"\");\n  const [dictionary, setDictionary] = React.useState(\"\");\n  \n  if(wordInfo == null) {\n    return <div></div>\n  }\n\n  let bookmarkIcon = (<BookmarkBorderIcon/>)\n  \n  if(wordInfo['bookmark']) {\n    bookmarkIcon = <BookmarkIcon/>\n  }\n\n  return (\n    <Dialog\n        fullScreen={true}\n        open={props.dialogOpen}\n        onExited={e => {\n          setOkurigana(\"\");\n          setDictionary(\"\");\n        }}\n        TransitionComponent={Transition}\n      >\n      <AppBar position=\"relative\">\n        <Toolbar>\n          < IconButton edge=\"start\" color=\"inherit\" onClick={() => props.onClose()}\n            aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{flex:1}}>\n            {wordInfo['surface']}\n          </Typography>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => props.addBookmark(!wordInfo['bookmark'])} aria-label=\"close\">\n            {bookmarkIcon}\n          </IconButton>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => window.open(`https://www.weblio.jp/content/${dictionary ? dictionary : wordInfo['dictionary']}`)} aria-label=\"close\">\n            <FindInPageIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container fixed>\n        <List component=\"nav\">\n          <ListItem> \n            <TextField\n              fullWidth={true}\n              label=\"活用\"\n              disabled\n              defaultValue={`${wordInfo['品詞'][0]}, ${wordInfo['活用型'][0]}`}\n            />\n          </ListItem>\n          <ListItem> \n            <TextField\n              error={!validateOkurigana(okurigana)}\n              helperText={validateOkurigana(okurigana) ? \" \" : \"格式錯誤\"}\n              fullWidth={true}\n              label=\"送り仮名\"\n              defaultValue={wordInfo['okurigana']}\n              onChange={(e) => setOkurigana(e.target.value)}\n              InputProps={{\n                endAdornment: \n                  <ReportButton\n                    visibility={false && okurigana.length !== 0 && okurigana !== wordInfo['okurigana']}\n                    onClick={() => {}}\n                  />\n              }}\n            />\n          </ListItem>\n          <ListItem> \n            <TextField\n              fullWidth={true}\n              label=\"辞書\"\n              defaultValue={wordInfo['dictionary']}\n              onChange={(e) => setDictionary(e.target.value)}\n              InputProps={{\n                endAdornment: \n                  <ReportButton\n                    visibility={false && dictionary.length !== 0 && dictionary !== wordInfo['dictionary']}\n                    onClick={() => {}}\n                  />\n              }}\n            />\n          </ListItem>\n          <ListItem style={{display:'flex', justifyContent:'flex-end'}}>\n            <Button color=\"primary\" onClick={() => {\n              if(!validateOkurigana(okurigana)) {\n                return;\n              }\n              \n              props.onSave(\n                okurigana ? okurigana : wordInfo['okurigana'], \n                dictionary ? dictionary : wordInfo['dictionary']\n              )\n            }}>更新</Button>\n          </ListItem>\n        </List>\n      </Container>\n    </Dialog>\n  );\n}\n\nconst reportButtonTheme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: orange[500],\n    },\n  },\n});\n\nfunction ReportButton(props) {\n  return <ThemeProvider theme={reportButtonTheme}>\n    <InputAdornment position=\"end\">\n      {props.visibility ? <Button onClick={props.onClick} color=\"secondary\" startIcon={<InfoIcon />}>回報錯誤</Button> : <div/>}\n    </InputAdornment>\n  </ThemeProvider>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}